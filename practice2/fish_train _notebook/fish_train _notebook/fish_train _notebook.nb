(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     93934,       1930]
NotebookOptionsPosition[     92280,       1899]
NotebookOutlinePosition[     92683,       1915]
CellTagsIndexPosition[     92640,       1912]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "it", " ", "somewhat", " ", "improving", " ", "accuracy", " ", "by", " ", 
     "picking", " ", "another", " ", "sample", " ", "data"}], " ", ",", 
    RowBox[{"idk", " ", "why"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "set", " ", "directory", " ", "for", " ", "importing", " ", "file"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"myImport", "=", 
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{"\"\<Fish.xlsx\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Data\>\"", ",", "1"}], "}"}]}], "]"}], " ", "[", 
      RowBox[{"[", 
       RowBox[{"3", ";;"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8207490064517517`*^9, 3.820749018850438*^9}, {
  3.820749087069009*^9, 3.8207491001869984`*^9}, {3.820749951784551*^9, 
  3.820749982002921*^9}, {3.8207500400882797`*^9, 
  3.8207501009717054`*^9}},ExpressionUUID->"80ce72f3-0ed1-4349-b9a4-\
0a4c031e2668"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"transform", " ", "into", " ", "a", " ", "list"}], "*)"}]], "Input",\
ExpressionUUID->"0162896d-f5c1-46e2-aae2-e38856a2b52f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myData", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"myImport", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", ";;"}], ",", 
        RowBox[{"1", ";;", 
         RowBox[{"-", "2"}]}]}], "]"}], "]"}], "->", 
     RowBox[{"myImport", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", ";;"}], ",", 
        RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[157]:=",ExpressionUUID->"95bbd891-60d6-4bd0-9c0f-3d8081e4870d"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.820749153754635*^9, 3.8207491539865828`*^9}, 
   3.820749186902645*^9},ExpressionUUID->"660645b8-6f36-4f70-bcf6-\
734eb88a0e94"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "pick", " ", "80", "%", " ", "of", " ", "sample", " ", "data", " ", "from", 
   " ", "myData", " ", "and", " ", "20", "%", " ", "for", " ", "evaluating"}],
   "*)"}]], "Input",
 CellChangeTimes->{{3.820749988551957*^9, 
  3.8207500361961184`*^9}},ExpressionUUID->"4c9c3158-1472-467e-843d-\
a932e63f5ae0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sampleSize", "=", 
   RowBox[{"IntegerPart", "[", 
    RowBox[{
     RowBox[{"Length", "@", "myData"}], "*", "0.8"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myDataTrain", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"myData", ",", "sampleSize"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myDataTest", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{"myData", ",", "myDataTrain"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.820749153754635*^9, 3.8207491539865828`*^9}, 
   3.820749186902645*^9},
 CellLabel->
  "In[163]:=",ExpressionUUID->"37bb7d3b-32c8-45b6-9537-3932a7d341cc"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.820749157768582*^9},
 CellLabel->
  "In[158]:=",ExpressionUUID->"48ddda7b-67d9-4a5b-83d9-65306a808492"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"auto", " ", "train"}], "*)"}]], "Input",
 CellChangeTimes->{{3.8207501071317015`*^9, 
  3.820750116202649*^9}},ExpressionUUID->"ef0977ab-ab25-4a9b-aebf-\
6590e45df3b3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myPredict", "=", 
  RowBox[{"Predict", "[", "myDataTrain", "]"}]}]], "Input",
 CellLabel->
  "In[166]:=",ExpressionUUID->"ee8b21a4-b922-442e-9ef7-58e173aa6005"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PredictorFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "6", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Numerical\"",
                     ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\""}], "}"}], Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Nominal", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical"}, 10], "Tooltip"]& ], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearRegression\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "6", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Numerical\"", ",", "\"Numerical\"",
                     ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\""}], "}"}], Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Nominal", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical"}, 10], "Tooltip"]& ], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["127", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PredictorFunction[
   Association[
   "ExampleNumber" -> 127, "Input" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Nominal"], "f2" -> 
           Association["Type" -> "Numerical"], "f3" -> 
           Association["Type" -> "Numerical"], "f4" -> 
           Association["Type" -> "Numerical"], "f5" -> 
           Association["Type" -> "Numerical"], "f6" -> 
           Association["Type" -> "Numerical"]], "Output" -> 
         Association[
          "f1" -> Association["Type" -> "Nominal", "Weight" -> 1], "f2" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f3" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f4" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f5" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f6" -> 
           Association["Type" -> "Numerical", "Weight" -> 1]], "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["Transpose", 
               Association["FeatureNumber" -> 6]], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {
                 "Nominal", "Numerical", "Numerical", "Numerical", 
                  "Numerical", "Numerical"}, 
                "FeatureKeys" -> {"f1", "f2", "f3", "f4", "f5", "f6"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False]]}]], "ScalarFeature" -> False,
          "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"]], "Processor" -> 
      MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f2" -> Association["Type" -> "Numerical", "Weight" -> 1], "f3" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f4" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f5" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f6" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f1" -> 
           Association["Type" -> "Nominal", "Weight" -> 1]], "Output" -> 
         Association[
          "(f2f3f4f5f6)" -> 
           Association["Type" -> "NumericalVector", "Weight" -> 5], "f1" -> 
           Association["Type" -> "NominalVector", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["Threads", 
            Association[
            "Input" -> Association[
              "f2" -> Association["Type" -> "Numerical", "Weight" -> 1], "f3" -> 
               Association["Type" -> "Numerical", "Weight" -> 1], "f4" -> 
               Association["Type" -> "Numerical", "Weight" -> 1], "f5" -> 
               Association["Type" -> "Numerical", "Weight" -> 1], "f6" -> 
               Association["Type" -> "Numerical", "Weight" -> 1], "f1" -> 
               Association["Type" -> "Nominal", "Weight" -> 1]], "Output" -> 
             Association[
              "(f2f3f4f5f6)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 5], "f1" -> 
               Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Processors" -> {
               MachineLearning`MLProcessor["ToVector", 
                Association[
                "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                 "StructurePreserving" -> True, "Input" -> 
                 Association[
                  "f2" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                   "f3" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                   "f4" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                   "f5" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                   "f6" -> Association["Type" -> "Numerical", "Weight" -> 1]],
                  "Output" -> 
                 Association[
                  "(f2f3f4f5f6)" -> 
                   Association["Type" -> "NumericalVector", "Weight" -> 5]], 
                 "Version" -> {12.2, 0}, "ID" -> 5914547285849911342]], 
               MachineLearning`MLProcessor["ToVector", 
                Association[
                "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                 "StructurePreserving" -> True, "Input" -> 
                 Association[
                  "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
                 "Output" -> 
                 Association[
                  "f1" -> Association[
                    "Type" -> "NominalVector", "Weight" -> 1]], 
                 "Version" -> {12.2, 0}, "ID" -> 2729918768343498454]]}, 
             "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
             "Missing" -> "Allowed"]], 
           MachineLearning`MLProcessor["Threads", 
            Association[
            "Input" -> Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1], 
               "(f2f3f4f5f6)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 5]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1], 
               "(f2f3f4f5f6)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 5]], 
             "Processors" -> {
               MachineLearning`MLProcessor["ImputeMissing", 
                Association[
                "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                 "StructurePreserving" -> True, "Input" -> 
                 Association[
                  "f1" -> Association[
                    "Type" -> "NominalVector", "Weight" -> 1]], 
                 "VectorLength" -> 1, "Output" -> 
                 Association[
                  "f1" -> Association[
                    "Type" -> "NominalVector", "Weight" -> 1]], "Type" -> 
                 "NominalVector", "Version" -> {12.2, 0}, "ID" -> 
                 1606623927450839390]], 
               MachineLearning`MLProcessor["ImputeMissing", 
                Association[
                "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                 "StructurePreserving" -> True, "Input" -> 
                 Association[
                  "(f2f3f4f5f6)" -> 
                   Association["Type" -> "NumericalVector", "Weight" -> 5]], 
                 "Imputer" -> (DimensionReducerFunction[
                   Association[
                   "ExampleNumber" -> 127, "Imputer" -> 
                    MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Fill" -> {398.89370078740154`, 26.286614173228347`, 
                    28.456692913385826`, 31.26929133858268, 
                    8.975643307086614}, "Method" -> "Naive", "VectorLength" -> 
                    5, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                    "NumericalVector"]], "RandomImputer" -> 
                    MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {398.89370078740154`, 26.286614173228347`, 
                    28.456692913385826`, 31.26929133858268, 
                    8.975643307086614}, 
                    "StandardDeviation" -> {361.5823709529296, 
                    10.05800000629987, 10.777868769144977`, 11.69332881894107,
                     4.338421391711684}, "Method" -> "NaiveSampler", 
                    "VectorLength" -> 5, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                    "NumericalVector"]], "Preprocessor" -> 
                    MachineLearning`MLProcessor["ToMLDataset", 
                    Association[
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 5]], "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                    "ExampleWeights" -> Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                    False]]}]], "ScalarFeature" -> True, "Invertibility" -> 
                    "Perfect", "StructurePreserving" -> False, "Missing" -> 
                    "Allowed"]], "Processor" -> 
                    MachineLearning`MLProcessor["Identity"], "Model" -> 
                    Association[
                    "Matrix" -> {{-0.4571967828830535, \
-0.022506328637556028`}, {-0.46516982140138197`, -0.28982598574502}, \
{-0.4670071524293854, -0.26140725598479525`}, {-0.4717837123935117, \
-0.1393572612610463}, {-0.36594068819794523`, 0.9098022661053917}}, 
                    "Processor" -> MachineLearning`MLProcessor["Sequence", 
                    Association[
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Processors" -> {
                    MachineLearning`MLProcessor["Standardize", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {398.89370078740154`, 26.286614173228347`, 
                    28.456692913385826`, 31.26929133858268, 
                    8.975643307086614}, 
                    "StandardDeviation" -> {361.5823709529296, 
                    10.05800000629987, 10.777868769144977`, 11.69332881894107,
                     4.338421391711684}, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]]]], 
                    MachineLearning`MLProcessor["FirstValues", 
                    Association[
                    "Info" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1], "Key" -> 
                    "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    False, "Missing" -> "Allowed"]]}, "Invertibility" -> 
                    "Perfect", "StructurePreserving" -> False, "Missing" -> 
                    "Allowed"]], "FinalDimension" -> 2, "Padder" -> 
                    MachineLearning`MLProcessor["Identity"], "Method" -> 
                    "Linear"], "PerformanceGoal" -> Automatic, 
                    "Invertibility" -> "Approximate", "Log" -> 
                    Association[
                    "TrainingTime" -> 0.0154536, "MaxTrainingMemory" -> 
                    116576, "DataMemory" -> 5488, "FunctionMemory" -> 22144, 
                    "LanguageVersion" -> {12.2, 0}, "Date" -> 
                    DateObject[{
                    2021, 1, 27, 23, 25, 27.1379953`9.18615267843123}, 
                    "Instant", "Gregorian", 8.], "ProcessorCount" -> 4, 
                    "ProcessorType" -> "x86-64", "OperatingSystem" -> 
                    "Windows", "SystemWordLength" -> 64, 
                    "Evaluations" -> {}]]][#, "ImputedVectors", 
                   PerformanceGoal -> "Quality"]& ), "Method" -> 
                 "DimensionReduction", "VectorLength" -> 5, "Output" -> 
                 Association[
                  "(f2f3f4f5f6)" -> 
                   Association["Type" -> "NumericalVector", "Weight" -> 5]], 
                 "Type" -> "NumericalVector", "Version" -> {12.2, 0}, "ID" -> 
                 1379754975937180092]]}, "Invertibility" -> "Perfect", 
             "StructurePreserving" -> True, "Missing" -> "Imputed"]], 
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "(f2f3f4f5f6)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 5]], 
             "Mean" -> {398.89370078740154`, 26.286614173228347`, 
              28.456692913385826`, 31.26929133858268, 8.975643307086614}, 
             "StandardDeviation" -> {361.5823709529296, 10.05800000629987, 
              10.777868769144977`, 11.69332881894107, 4.338421391711684}, 
             "Output" -> 
             Association[
              "(f2f3f4f5f6)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 5]], 
             "Version" -> {12.2, 0}, "ID" -> 901588546815836284]], 
           MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Index" -> {
               Association[
               "Bream" -> 1, "Parkki" -> 2, "Perch" -> 3, "Pike" -> 4, 
                "Roach" -> 5, "Smelt" -> 6, "Whitefish" -> 7]}, "MissingCode" -> 
             0, "Version" -> {12.2, 0}, "ID" -> 1408039387096507361, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1]]]]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
         "Missing" -> "Imputed"]]], "Output" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Numerical"]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
         "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False]]}]], "ScalarFeature" -> True, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"]], "Processor" -> 
      MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {12.2, 0}, "ID" -> 6941292458328693438]], 
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Mean" -> {4.403644881889766}, 
             "StandardDeviation" -> {1.6995676855915023`}, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {12.2, 0}, "ID" -> 8567354636386922141]], 
           MachineLearning`MLProcessor["FromVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
             "Version" -> {12.2, 0}, "ID" -> 4804841533717650980]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association["Type" -> "Numerical", "Weight" -> 1], 
             "Key" -> "f1", "Invertibility" -> "Perfect", 
             "StructurePreserving" -> False, "Missing" -> "Allowed"]]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"]], "ProbabilityPostprocessor" -> Identity, 
      "InverseProcessorFunction" -> (4.403644881889766 + 
       1.6995676855915023` #& ), 
      "ProcessorFunction" -> (-2.59103825003425 + 0.5883849219291134 #& ), 
      "Name" -> "value", 
      "Quantiles" -> {-1.915337005690856, 2.199591784312591}], 
    "LabelSplitter" -> MachineLearning`MLProcessor["FeatureLabelSplit", 
      Association[
      "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
       "PreferLabeled" -> True, "KeepLabelsFormat" -> False]], "Prior" -> 
    Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 0, 
    "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, "Model" -> 
    Association["MeanFunction" -> LinearLayer[
        Association[
        "Type" -> "Linear", "Arrays" -> 
         Association[
          "Weights" -> 
           RawArray["Real32",{{
             0.07760687917470932, -0.13316385447978973`, -0.0961083248257637, \
-0.1394716203212738, 0.06446237117052078, 1.4339265823364258`, 
             0.883148193359375, -1.9852983951568604`, 0.7825084924697876}}], 
           "Biases" -> RawArray["Real32",{-1.4366532171127292`*^-15}]], 
         "Parameters" -> 
         Association[
          "OutputDimensions" -> {1}, "$OutputSize" -> 1, "$InputSize" -> 9, 
           "$InputDimensions" -> {9}], "Inputs" -> 
         Association[
          "Input" -> NeuralNetworks`TensorT[{9}, NeuralNetworks`AtomT]], 
         "Outputs" -> 
         Association[
          "Output" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
        Association["Version" -> "12.2.13", "Unstable" -> False]], 
      "DistributionData" -> {NormalDistribution, 0.22241342310276482`}, 
      "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association[
            "Type" -> "NominalVector", "Weight" -> 1, "SetSize" -> {7}], 
           "(f2f3f4f5f6)" -> 
           Association["Type" -> "NumericalVector", "Weight" -> 5]], "Output" -> 
         Association[
          "(f1(f2f3f4f5f6))" -> 
           Association["Type" -> "NumericalVector", "Weight" -> 6.]], 
         "Processors" -> {
           MachineLearning`MLProcessor["EmbedNominalVector", 
            Association[
            "Invertibility" -> "Impossible", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1, "SetSize" -> {7}]], 
             "Index" -> {
               Association[
               1 -> 1, 2 -> 2, 3 -> 3, 4 -> 4, 5 -> 5, 6 -> 6, 7 -> 7]}, 
             "Output" -> 
             Association[
              "f1" -> Association[
                "Weight" -> 1, "Type" -> "NumericalVector"]], 
             "EmbeddingVectors" -> {{{0., 0., 0., 0.}, {-0.3298858404159546, 
              0.6095332503318787, 
              0.6934940814971924, -0.06808967888355255}, \
{-1.4105669260025024`, 0.6085002422332764, 0.13426777720451355`, 
              0.5876877307891846}, {0.8471893072128296, -0.12908165156841278`,
               0.17502550780773163`, -0.06310898810625076}, {
              1.0770241022109985`, 0.4474571645259857, -0.4129128158092499, 
              0.9438040852546692}, {-0.5281444191932678, \
-0.49675747752189636`, -0.5111841559410095, 
              0.22208167612552643`}, {-0.4767104685306549, 
              0.6626850962638855, -0.3781697154045105, 
              0.10455602407455444`}, {0.9922332167625427, 
              0.35047635436058044`, 
              0.5958333611488342, -0.8306029438972473}}}, 
             "Version" -> {12.2, 0}, "ID" -> 8192192305511905174]], 
           MachineLearning`MLProcessor["MergeVectors", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association["Weight" -> 1, "Type" -> "NumericalVector"],
                "(f2f3f4f5f6)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 5]], 
             "Spans" -> {
               Span[1, 4], 
               Span[5, 9]}, "Wrappers" -> {Identity, Identity}, "Output" -> 
             Association[
              "(f1(f2f3f4f5f6))" -> 
               Association[
                "Weight" -> {0.25, 0.25, 0.25, 0.25, 1., 1., 1., 1., 1.}, 
                 "Type" -> "NumericalVector"]], "Version" -> {12.2, 0}, "ID" -> 
             483773107577761862]], 
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "(f1(f2f3f4f5f6))" -> 
               Association[
                "Weight" -> {0.25, 0.25, 0.25, 0.25, 1., 1., 1., 1., 1.}, 
                 "Type" -> "NumericalVector"]], 
             "Mean" -> {0.1824393055980992, 0.2076841811797613, 
              0.11645695477878588`, 0.11373350227545716`, 
              0.00001882309321656597, -0.0005081547239288083, 
              0.0001751133750822467, 0.0007219011290625352, 
              0.0004919409835006527}, 
             "StandardDeviation" -> {0.7755249044376997, 0.4082576155759741, 
              0.42292841801876513`, 0.37422833209487466`, 0.9999510964771104, 
              1.0004507603298298`, 0.9995632967795838, 1.0001401332135824`, 
              0.9997215696925623}, "Output" -> 
             Association[
              "(f1(f2f3f4f5f6))" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 6.]], 
             "Version" -> {12.2, 0}, "ID" -> 3031883358992676265]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association[
              "Type" -> "NumericalVector", "Weight" -> 6.], "Key" -> 
             "(f1(f2f3f4f5f6))", "Invertibility" -> "Perfect", 
             "StructurePreserving" -> False, "Missing" -> "Allowed"]]}, 
         "Invertibility" -> "Impossible", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"]], "Calibrator" -> None, "Method" -> 
      "LinearRegression", "PostProcessor" -> 
      MachineLearning`MLProcessor["Identity"], "Options" -> 
      Association[
       "L1Regularization" -> 
        Association["Value" -> 0, "Options" -> Association[]], 
        "L2Regularization" -> 
        Association["Value" -> 0.001, "Options" -> Association[]], 
        "OptimizationMethod" -> 
        Association["Value" -> "NormalEquation", "Options" -> Association[]], 
        MaxIterations -> 
        Association["Value" -> 30, "Options" -> Association[]]]], 
    "TrainingInformation" -> 
    Association[
     "PanelCell" -> CellObject[247329], "TrainingFunction" -> Predict, 
      "EMIterations" -> Missing["KeyAbsent", "EMIterations"], 
      "ProcessorEntropyShift" -> 0.530373916128549, "PreprocessingTime" -> 
      0.1919983`6.734842376866771, "LossName" -> "StandardDeviation", 
      "BestModelInformation" -> Dataset[
        Association[
        "MeanCrossEntropy" -> Around[1.5595729971058345`, 0.5304095240727423],
          "StandardDeviation" -> 
         Around[0.5842183843604134, 0.09975773910455446], "EvaluationTime" -> 
         0.0000564692439315782, "TestSize" -> 112, "ModelMemory" -> 26888, 
         "ModelUtility" -> -0.18926896273438298`, "TrainingSize" -> 15, 
         "TrainingTime" -> 0.012589254117941668`, "TrainingMemory" -> 80720, 
         "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
           Around[1.5595729971058345`, 0.3750561712777654]}, 
         "StandardDeviationHistory" -> {
           Around[0.5842183843604134, 0.07053937379666889]}, 
         "Configuration" -> {
          "LinearRegression", "L1Regularization" -> 0, "L2Regularization" -> 
           0.001, "OptimizationMethod" -> Automatic, MaxIterations -> 30}, 
         "FinalTrainingSize" -> 127], 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
          "TestSize", "ModelMemory", "ModelUtility", "TrainingSize", 
          "TrainingTime", "TrainingMemory", "ExperimentCount", 
          "MeanCrossEntropyHistory", "StandardDeviationHistory", 
          "Configuration", "FinalTrainingSize"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType}], 
          TypeSystem`Atom[Integer]}], 
        Association[]], "Configurations" -> Dataset[
        Association[
        Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 50], "LeavesNumber" -> 
             Association["Value" -> 25], "LearningRate" -> 
             Association["Value" -> 0.2], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 4], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 7], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> "MeanSquaredError"]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[1.9873160117514903`, 0.2848931976450687], 
              "StandardDeviation" -> 
              Around[1.1449389891220327`, 0.11382135981214399`], 
              "EvaluationTime" -> 0.00014184432762933595`, "TestSize" -> 112, 
              "ModelMemory" -> 126624, "ModelUtility" -> -0.8482308404901018, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.0630957344480193, 
              "TrainingMemory" -> 264328, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.9873160117514903`, 0.20144991196874742`]}, 
              "StandardDeviationHistory" -> {
                Around[1.1449389891220327`, 0.08048385536704099]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00014184432762933595`, "ModelMemory" -> 
             126624, "StandardDeviation" -> 
             Around[1.1449389891220327`, 0.11382135981214399`], 
             "TrainingMemory" -> 264328, "TrainingTime" -> 
             0.14322731719700382`], "Index" -> 1], 
         Association[
          "Value" -> "RandomForest", "Options" -> 
           Association[
            "FeatureFraction" -> Association["Value" -> Automatic], 
             "LeafSize" -> Association["Value" -> Automatic], "TreeNumber" -> 
             Association["Value" -> Automatic], "DistributionSmoothing" -> 
             Association["Value" -> 0.5], "Implementation" -> 
             Association["Value" -> Automatic]]] -> Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[1.3950087776301543`, 0.07147503741017394], 
              "StandardDeviation" -> 
              Around[0.9463202131276679, 0.09599225254054991], 
              "EvaluationTime" -> 0.0001272576410003995, "TestSize" -> 112, 
              "ModelMemory" -> 110704, "ModelUtility" -> -0.6580984776412406, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.025118864315095794`, 
              "TrainingMemory" -> 169528, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.3950087776301543`, 0.050540483638296156`]}, 
              "StandardDeviationHistory" -> {
                Around[0.9463202131276679, 0.06787677271279444]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[0.838579407363391, 0.1855945904105066], 
              "StandardDeviation" -> 
              Around[0.6823343566664435, 0.25671354855546075`], 
              "EvaluationTime" -> 0.0002523829377920772, "TestSize" -> 25, 
              "ModelMemory" -> 110704, "ModelUtility" -> -0.3835021382840411, 
              "TrainingSize" -> 102, "TrainingTime" -> 0.025118864315095794`, 
              "TrainingMemory" -> 186960, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.838579407363391, 0.131235193430809]}, 
              "StandardDeviationHistory" -> {
                Around[0.6823343566664435, 0.1815238910060283]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.0002523829377920772, "ModelMemory" -> 
             110704, "StandardDeviation" -> 
             Around[0.6823343566664435, 0.25671354855546075`], 
             "TrainingMemory" -> 186960, "TrainingTime" -> 
             0.05639431302114644], "Index" -> 2], 
         Association[
          "Value" -> "DecisionTree", "Options" -> 
           Association[
            "DistributionSmoothing" -> Association["Value" -> 1], 
             "FeatureFraction" -> Association["Value" -> 1]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[1.289145724559042, 0.06820342803092917], 
              "StandardDeviation" -> 
              Around[0.8437580266782916, 0.07868361432417241], 
              "EvaluationTime" -> 0.00003562968419587284, "TestSize" -> 112, 
              "ModelMemory" -> 19264, "ModelUtility" -> -0.5417563798283492, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.015848931924611134`, 
              "TrainingMemory" -> 79800, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.289145724559042, 0.04822710646083867]}, 
              "StandardDeviationHistory" -> {
                Around[0.8437580266782916, 0.05563771725688927]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[1.1629411107085257`, 0.1844231385731414], 
              "StandardDeviation" -> 
              Around[0.8071700572130611, 0.21388357868484106`], 
              "EvaluationTime" -> 0.00010047545726038318`, "TestSize" -> 25, 
              "ModelMemory" -> 19840, "ModelUtility" -> -0.5305855901791838, 
              "TrainingSize" -> 102, "TrainingTime" -> 0.015848931924611134`, 
              "TrainingMemory" -> 100232, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.1629411107085257`, 0.13040685189277462`]}, 
              "StandardDeviationHistory" -> {
                Around[0.8071700572130611, 0.1512385288724976]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00010047545726038318`, "ModelMemory" -> 
             19840, "StandardDeviation" -> 
             Around[0.8071700572130611, 0.21388357868484106`], 
             "TrainingMemory" -> 100232, "TrainingTime" -> 
             0.035582405987607355`], "Index" -> 3], 
         Association[
          "Value" -> "NearestNeighbors", "Options" -> 
           Association[
            "NeighborsNumber" -> Association["Value" -> Automatic], 
             "DistributionSmoothing" -> Association["Value" -> 0.5], 
             "NearestMethod" -> Association["Value" -> Automatic]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[0.9498142226758697, 0.16384689179757625`], 
              "StandardDeviation" -> 
              Around[0.6573215401577962, 0.09144077224948972], 
              "EvaluationTime" -> 0.000046049464063725516`, "TestSize" -> 112,
               "ModelMemory" -> 20720, "ModelUtility" -> -0.3010275476365374, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.01, "TrainingMemory" -> 
              88664, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[0.9498142226758697, 0.11585724826640467`]}, 
              "StandardDeviationHistory" -> {
                Around[0.6573215401577962, 0.06465839013454885]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[1.147703928615003, 0.5131845430602446], 
              "StandardDeviation" -> 
              Around[0.6576143976647394, 0.2668302112134444], 
              "EvaluationTime" -> 0.00010047545726038318`, "TestSize" -> 25, 
              "ModelMemory" -> 27504, "ModelUtility" -> -0.35205856587447415`,
               "TrainingSize" -> 102, "TrainingTime" -> 0.012589254117941668`,
               "TrainingMemory" -> 416520, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.147703928615003, 0.3628762703980188]}, 
              "StandardDeviationHistory" -> {
                Around[0.6576143976647394, 0.1886774517744653]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00010047545726038318`, "ModelMemory" -> 
             27504, "StandardDeviation" -> 
             Around[0.6576143976647394, 0.2668302112134444], "TrainingMemory" -> 
             416520, "TrainingTime" -> 0.025674855617437174`], "Index" -> 4], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 100000.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[2.1394675039169413`, 0.0317028842052045], 
              "StandardDeviation" -> 
              Around[1.7268490812683464`, 0.13549894613220145`], 
              "EvaluationTime" -> 0.0000564692439315782, "TestSize" -> 112, 
              "ModelMemory" -> 26888, "ModelUtility" -> -1.2550384819747211`, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.012589254117941668`, 
              "TrainingMemory" -> 80848, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.1394675039169413`, 0.022417324404671993`]}, 
              "StandardDeviationHistory" -> {
                Around[1.7268490812683464`, 0.09581222365371037]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.0000564692439315782, "ModelMemory" -> 26888,
              "StandardDeviation" -> 
             Around[1.7268490812683464`, 0.13549894613220145`], 
             "TrainingMemory" -> 80848, "TrainingTime" -> 
             0.028577606847727588`], "Index" -> 5], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1000.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[2.0819843972944034`, 0.03221080935876151], 
              "StandardDeviation" -> 
              Around[1.6335181744170766`, 0.13025449855063095`], 
              "EvaluationTime" -> 0.0000564692439315782, "TestSize" -> 112, 
              "ModelMemory" -> 26888, "ModelUtility" -> -1.1997267134494762`, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.012589254117941668`, 
              "TrainingMemory" -> 80784, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.0819843972944034`, 0.022776481725087366`]}, 
              "StandardDeviationHistory" -> {
                Around[1.6335181744170766`, 0.09210383920520447]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.0000564692439315782, "ModelMemory" -> 26888,
              "StandardDeviation" -> 
             Around[1.6335181744170766`, 0.13025449855063095`], 
             "TrainingMemory" -> 80784, "TrainingTime" -> 
             0.028577606847727588`], "Index" -> 6], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 10.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[0.9192969412309304, 0.09576024608992838], 
              "StandardDeviation" -> 
              Around[0.6321540528828364, 0.09071988934240423], 
              "EvaluationTime" -> 0.0000564692439315782, "TestSize" -> 112, 
              "ModelMemory" -> 26888, "ModelUtility" -> -0.26284422635329274`,
               "TrainingSize" -> 15, "TrainingTime" -> 0.012589254117941668`, 
              "TrainingMemory" -> 80336, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.9192969412309304, 0.06771271937828093]}, 
              "StandardDeviationHistory" -> {
                Around[0.6321540528828364, 0.06414864894250723]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.0000564692439315782, "ModelMemory" -> 26888,
              "StandardDeviation" -> 
             Around[0.6321540528828364, 0.09071988934240423], 
             "TrainingMemory" -> 80336, "TrainingTime" -> 
             0.028577606847727588`], "Index" -> 7], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.001], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[1.5595729971058345`, 0.5304095240727423], 
              "StandardDeviation" -> 
              Around[0.5842183843604134, 0.09975773910455446], 
              "EvaluationTime" -> 0.0000564692439315782, "TestSize" -> 112, 
              "ModelMemory" -> 26888, "ModelUtility" -> -0.18926896273438298`,
               "TrainingSize" -> 15, "TrainingTime" -> 0.012589254117941668`, 
              "TrainingMemory" -> 80720, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.5595729971058345`, 0.3750561712777654]}, 
              "StandardDeviationHistory" -> {
                Around[0.5842183843604134, 0.07053937379666889]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[0.7563230433430185, 0.3057541791983352], 
              "StandardDeviation" -> 
              Around[0.6526680872398698, 0.2728365711945095], 
              "EvaluationTime" -> 0.00012649110640673518`, "TestSize" -> 25, 
              "ModelMemory" -> 26888, "ModelUtility" -> -0.34677709844300453`,
               "TrainingSize" -> 102, "TrainingTime" -> 0.012589254117941668`,
               "TrainingMemory" -> 100048, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.7563230433430185, 0.21620085348726964`]}, 
              "StandardDeviationHistory" -> {
                Around[0.6526680872398698, 0.1929245896473239]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00012649110640673518`, "ModelMemory" -> 
             26888, "StandardDeviation" -> 
             Around[0.6526680872398698, 0.2728365711945095], "TrainingMemory" -> 
             100048, "TrainingTime" -> 0.028264109735378844`], "Index" -> 8], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association[
          "Experiments" -> {}, "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 1, "ModelMemory" -> 1, "StandardDeviation" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1], "Index" -> 9], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1.*^6], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association[
          "Experiments" -> {}, "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 1, "ModelMemory" -> 1, "StandardDeviation" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1], "Index" -> 10]], 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration[
            "DecisionTree", "GradientBoostedTrees", "LinearRegression", 
             "NearestNeighbors", "RandomForest"]], 
           TypeSystem`Assoc[TypeSystem`AnyType, 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 
            TypeSystem`AnyLength]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
              "TestSize", "ModelMemory", "ModelUtility", "TrainingSize", 
              "TrainingTime", "TrainingMemory", "ExperimentCount", 
              "MeanCrossEntropyHistory", "StandardDeviationHistory"}, {
             TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Vector[TypeSystem`AnyType, 1], 
              TypeSystem`Vector[TypeSystem`AnyType, 1]}], 
            TypeSystem`AnyLength], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "ModelMemory", "StandardDeviation", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 10], 
        Association[]], "MaxTrainingSize" -> 127, 
      "PreprocessorEvaluationTime" -> 8.5890625*^-6, "PreprocessorMemory" -> 
      65424, "InputDimension" -> 6, "OutputDimension" -> 1, 
      "BaselineLogProbability" -> -1.4189385332046727`, "VariableBudget" -> 
      True, "CheckpointingInfo" -> Association["Checkpointing" -> False], 
      "UserStop" -> False, "NaturalStop" -> True, "AbortStop" -> False, 
      "LastReportingTime" -> 3.8207787281329964`17.334726876381623*^9, 
      "RoundPartitioning" -> Dataset[{
         Association[
         "TrainingSizes" -> 15, "TimeBudgets" -> 0.28, "ElapsedTimes" -> 
          0.2669974, "ExperimentCounts" -> 8], 
         Association[
         "TrainingSizes" -> 102, "TimeBudgets" -> 0.4, "ElapsedTimes" -> 
          0.3620011, "ExperimentCounts" -> 4]}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 2], 
        Association[]]], "AnomalyDetector" -> None, "Log" -> 
    Association["Example" -> MachineLearning`MLDataset[
        Association[
        "f1" -> Association[
          "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"Roach"}, "ID" -> 
           1999296367678561222], "f2" -> 
         Association[
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.}, "ID" -> 
           5520881989986265503], "f3" -> 
         Association[
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {19.}, "ID" -> 
           2301032249009877666], "f4" -> 
         Association[
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {20.5}, "ID" -> 
           7314894753454409753], "f5" -> 
         Association[
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {22.8}, "ID" -> 
           2574916487849971789], "f6" -> 
         Association[
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {6.4752}, "ID" -> 
           8608768105478414766]], 
        Association[
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0, 
         "RawExample" -> False]], "TrainingTime" -> 1.1365969, 
      "MaxTrainingMemory" -> 807240, "DataMemory" -> 35664, "FunctionMemory" -> 
      222432, "LanguageVersion" -> {12.2, 0}, "Date" -> 
      DateObject[{2021, 1, 27, 23, 25, 28.2339953`9.203347250871252}, 
        "Instant", "Gregorian", 8.], "ProcessorCount" -> 4, "ProcessorType" -> 
      "x86-64", "OperatingSystem" -> "Windows", "SystemWordLength" -> 64, 
      "Evaluations" -> {}]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8207492778355474`*^9, 3.8207493062900286`*^9}, 
   3.820749607523785*^9, 3.820749843487323*^9, 3.820749928362994*^9},
 CellLabel->
  "Out[166]=",ExpressionUUID->"0ff6d7fc-68cd-4d61-8324-c8302d7c071b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"accuracy", " ", "test"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"myAccuracy", "=", 
     RowBox[{"PredictorMeasurements", "[", 
      RowBox[{"myPredict", ",", "myDataTest"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"myAccuracy", "[", "\"\<Report\>\"", "]"}], "\[IndentingNewLine]", 
   RowBox[{"myAccuracy", "/@", 
    RowBox[{"{", "\"\<ResidualPlot\>\"", "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.820749261344601*^9, 3.820749261806549*^9}, {
  3.820749462174286*^9, 3.8207495074711943`*^9}, {3.820750119883649*^9, 
  3.820750127513652*^9}},ExpressionUUID->"53fdd2ff-7bbd-4545-bd48-\
a4b20623d0e0"],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Predictor Measurements\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12],
         FrameMargins->{{10, 5}, {-4, 2}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->RGBColor[0.96, 0.96, 0.96],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        TagBox[
         FrameBox[
          TagBox[GridBox[{
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Predictor method"], 
                  TextCell["Predictor method"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              
              InterpretationBox[Cell[
               "LinearRegression",ExpressionUUID->
                "57e4c94b-385b-4947-ac10-b73f3c8a8f83"],
               TextCell["LinearRegression"]]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Number of test examples"], 
                  TextCell["Number of test examples"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], "32"},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Standard deviation"], 
                  TextCell["Standard deviation"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"0.2817387525826409167`3.", 
                  StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0312096787657008962`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.2193193950512391244`3.",
                   "\", \"", "0.3441581101140427368`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 0.2193193950512391244`3., 
                  ", ", 0.3441581101140427368`3., "]"}], "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["Standard deviation baseline"], 
                    TextCell["Standard deviation baseline"]], 
                   "\"Standard deviation of testset values\"", LabelStyle -> 
                   "TextStyling"], 
                  Annotation[#, "Standard deviation of testset values", 
                   "Tooltip"]& ], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"1.6013807292672030957`3.", 
                  StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.181558817726904409`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "1.2382630938133942777`3.",
                   "\", \"", "1.9644983647210119138`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                Row[{
                 "95% confidence interval: [", 1.2382630938133942777`3., ", ",
                   1.9644983647210119138`3., "]"}], "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["R-squared"], 
                  TextCell["R-squared"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"0.9690469122546363501`3.", 
                  StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0098783154635393444`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.9492902813275576612`3.",
                   "\", \"", "0.9888035431817150389`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 0.9492902813275576612`3., 
                  ", ", 0.9888035431817150389`3., "]"}], "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Mean cross entropy"], 
                  TextCell["Mean cross entropy"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"0.2238516053775803094`3.", 
                  StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0611583606689585779`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.1015348840396631536`3.",
                   "\", \"", "0.3461683267154974653`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 0.1015348840396631536`3., 
                  ", ", 0.3461683267154974653`3., "]"}], "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Single evaluation time"], 
                  TextCell["Single evaluation time"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"5.99`", 
                
                RowBox[{
                 "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                  "\"example\""}], "milliseconds per example", 
                FractionBox["\"Milliseconds\"", "\"Examples\""]},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Batch evaluation speed"], 
                  TextCell["Batch evaluation speed"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"892.`", 
                
                RowBox[{
                 "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                  "\[InvisibleSpace]", "\"s\""}], "examples per second", 
                FractionBox["\"Examples\"", "\"Seconds\""]},
               "Quantity"]},
             {
              ItemBox[
               GraphicsBox[{{{}, {
                   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                    0.012833333333333334`], AbsoluteThickness[1.6], 
                    GeometricTransformationBox[InsetBox[
                    FormBox[
                    StyleBox[
                    GraphicsBox[
                    {RGBColor[0.34398, 0.49112, 0.89936], AbsoluteThickness[
                    1.], CircleBox[{0, 0}, Offset[{1.8, 1.8}, {0., 0.}]]}],
                    StripOnInput->False,
                    GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}],
                    TraditionalForm], {0., 0.}], CompressedData["
1:eJwBFQLq/SFib1JlAwAAACAAAAABAAAAAgAAAG7RTWPJwhRAUkmdgCZCE0D2
nIHwtK0VQJCg+DHmrhRA7HTw/jzxFkA7cM6I0h4VQK095973zRVARUdy+Q/p
FkAU9s186fAVQBUdyeU/JBVAGoJ6X2WZG0C28/3UeGkaQN0N3tLBYQNA/Knx
0k1iBUBuFUBiBjAGQCqpE9BEWAdAnvxX2n7oBEDb+X5qvHQDQF1m/p7tcAdA
1XjpJjGIB0BZDKMnM80KQNcS8kHPZghAntdlrUv8C0D2KFyPwnUKQCRM6TLr
HBNAcF8HzhnREEBRZGtg6lwTQNlfdk8eFhNA1lph91fPF0DNzMzMzIwZQES7
mlg15hhA2/l+arx0G0CopP22YxIcQH2utmJ/2R1APPV+9RNvHUDRItv5fqod
QK6GI9SYMxNAL90kBoGVE0BIxicyyNgTQBQ/xty1hBRA7hfoEhz/GkBUUieg
ifAbQAqCfQ6S9wtA1edqK/aXDEDcfc2ZxR0OQIv9ZffkYQxAJYHRORP6CkC3
0QDeAgkOQHfHYyHBYQ1AOUVHcvmPDkBqjHxvqkkQQHNoke18Pw9AlwTp0691
EUAOvjCZKhgTQObMGgYs8xFAeJyiI7n8EUBamkXZR37xPzSitDf4wvA/GBhE
Eigm9T8UrkfhehT2P/bC18lvnhFAWvW52or9EEAslPnZuGYRQFg5tMh2/hBA
B5Pn3A==
                    "]]}, {
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.1902213588949575`, 4.8146}}]},
                    RowBox[{"{", 
                    RowBox[{"5.1902213588949575`", ",", "4.8146`"}], "}"}]],
                    
                    Annotation[#, {5.1902213588949575`, 4.8146}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.419635541830976, 5.1708}}]},
                    RowBox[{"{", 
                    RowBox[{"5.419635541830976`", ",", "5.1708`"}], "}"}]],
                    Annotation[#, {5.419635541830976, 5.1708}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.735584243227304, 5.2801}}]},
                    RowBox[{"{", 
                    RowBox[{"5.735584243227304`", ",", "5.2801`"}], "}"}]],
                    Annotation[#, {5.735584243227304, 5.2801}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.4511408642423875`, 5.7276}}]},
                    RowBox[{"{", 
                    RowBox[{"5.4511408642423875`", ",", "5.7276`"}], "}"}]],
                    
                    Annotation[#, {5.4511408642423875`, 5.7276}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.485265684195401, 5.2854}}]},
                    RowBox[{"{", 
                    RowBox[{"5.485265684195401`", ",", "5.2854`"}], "}"}]],
                    Annotation[#, {5.485265684195401, 5.2854}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.899800769665058, 6.603}}]},
                    RowBox[{"{", 
                    RowBox[{"6.899800769665058`", ",", "6.603`"}], "}"}]],
                    Annotation[#, {6.899800769665058, 6.603}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{2.4227329706206846`, 2.673}}]},
                    RowBox[{"{", 
                    RowBox[{"2.4227329706206846`", ",", "2.673`"}], "}"}]],
                    Annotation[#, {2.4227329706206846`, 2.673}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{2.773449676113777, 2.9181}}]},
                    RowBox[{"{", 
                    RowBox[{"2.773449676113777`", ",", "2.9181`"}], "}"}]],
                    Annotation[#, {2.773449676113777, 2.9181}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{2.613523202715057, 2.432}}]},
                    RowBox[{"{", 
                    RowBox[{"2.613523202715057`", ",", "2.432`"}], "}"}]],
                    Annotation[#, {2.613523202715057, 2.432}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{2.930140726221721, 2.9415}}]},
                    RowBox[{"{", 
                    RowBox[{"2.930140726221721`", ",", "2.9415`"}], "}"}]],
                    Annotation[#, {2.930140726221721, 2.9415}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{3.350195226348245, 3.0502}}]},
                    RowBox[{"{", 
                    RowBox[{"3.350195226348245`", ",", "3.0502`"}], "}"}]],
                    Annotation[#, {3.350195226348245, 3.0502}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{3.498191218061904, 3.3075}}]},
                    RowBox[{"{", 
                    RowBox[{"3.498191218061904`", ",", "3.3075`"}], "}"}]],
                    Annotation[#, {3.498191218061904, 3.3075}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{4.778240962495179, 4.2042}}]},
                    RowBox[{"{", 
                    RowBox[{"4.778240962495179`", ",", "4.2042`"}], "}"}]],
                    Annotation[#, {4.778240962495179, 4.2042}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{4.84073782592266, 4.7716}}]},
                    RowBox[{"{", 
                    RowBox[{"4.84073782592266`", ",", "4.7716`"}], "}"}]],
                    Annotation[#, {4.84073782592266, 4.7716}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{5.952484002415721, 6.3875}}]},
                    RowBox[{"{", 
                    RowBox[{"5.952484002415721`", ",", "6.3875`"}], "}"}]],
                    Annotation[#, {5.952484002415721, 6.3875}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.224812874263822, 6.864}}]},
                    RowBox[{"{", 
                    RowBox[{"6.224812874263822`", ",", "6.864`"}], "}"}]],
                    Annotation[#, {6.224812874263822, 6.864}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.017958506804611, 7.4624}}]},
                    RowBox[{"{", 
                    RowBox[{"7.017958506804611`", ",", "7.4624`"}], "}"}]],
                    Annotation[#, {7.017958506804611, 7.4624}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{7.3584745749224645`, 7.4165}}]},
                    RowBox[{"{", 
                    RowBox[{"7.3584745749224645`", ",", "7.4165`"}], "}"}]],
                    
                    Annotation[#, {7.3584745749224645`, 7.4165}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{4.800387682598439, 4.896}}]},
                    RowBox[{"{", 
                    RowBox[{"4.800387682598439`", ",", "4.896`"}], "}"}]],
                    Annotation[#, {4.800387682598439, 4.896}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{4.961701186826367, 5.1296}}]},
                    RowBox[{"{", 
                    RowBox[{"4.961701186826367`", ",", "5.1296`"}], "}"}]],
                    Annotation[#, {4.961701186826367, 5.1296}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{6.749130530753957, 6.9849}}]},
                    RowBox[{"{", 
                    RowBox[{"6.749130530753957`", ",", "6.9849`"}], "}"}]],
                    Annotation[#, {6.749130530753957, 6.9849}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{3.4958840496112815`, 3.5742}}]},
                    RowBox[{"{", 
                    RowBox[{"3.4958840496112815`", ",", "3.5742`"}], "}"}]],
                    
                    Annotation[#, {3.4958840496112815`, 3.5742}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{3.764537049850089, 3.5478}}]},
                    RowBox[{"{", 
                    RowBox[{"3.764537049850089`", ",", "3.5478`"}], "}"}]],
                    Annotation[#, {3.764537049850089, 3.5478}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{3.3721069829045, 3.7544}}]},
                    RowBox[{"{", 
                    RowBox[{"3.3721069829045`", ",", "3.7544`"}], "}"}]],
                    Annotation[#, {3.3721069829045, 3.7544}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{3.6727316483092483`, 3.8203}}]},
                    RowBox[{"{", 
                    RowBox[{"3.6727316483092483`", ",", "3.8203`"}], "}"}]],
                    
                    Annotation[#, {3.6727316483092483`, 3.8203}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{4.071939222313725, 3.906}}]},
                    RowBox[{"{", 
                    RowBox[{"4.071939222313725`", ",", "3.906`"}], "}"}]],
                    Annotation[#, {4.071939222313725, 3.906}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{4.364928542229925, 4.7736}}]},
                    RowBox[{"{", 
                    RowBox[{"4.364928542229925`", ",", "4.7736`"}], "}"}]],
                    Annotation[#, {4.364928542229925, 4.7736}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{4.487472625146642, 4.4968}}]},
                    RowBox[{"{", 
                    RowBox[{"4.487472625146642`", ",", "4.4968`"}], "}"}]],
                    Annotation[#, {4.487472625146642, 4.4968}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{1.0933302390273156`, 1.0476}}]},
                    RowBox[{"{", 
                    RowBox[{"1.0933302390273156`", ",", "1.0476`"}], "}"}]],
                    
                    Annotation[#, {1.0933302390273156`, 1.0476}, 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{1.3218155587687814`, 1.38}}]},
                    RowBox[{"{", 
                    RowBox[{"1.3218155587687814`", ",", "1.38`"}], "}"}]],
                    Annotation[#, {1.3218155587687814`, 1.38}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{4.40472331408886, 4.2476}}]},
                    RowBox[{"{", 
                    RowBox[{"4.40472331408886`", ",", "4.2476`"}], "}"}]],
                    Annotation[#, {4.40472331408886, 4.2476}, "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    {Opacity[0.], PointBox[{{4.350314527376252, 4.2485}}]},
                    RowBox[{"{", 
                    RowBox[{"4.350314527376252`", ",", "4.2485`"}], "}"}]],
                    
                    Annotation[#, {4.350314527376252, 4.2485}, 
                    "Tooltip"]& ]}}, {{}, {}}}, {{{}, {}, 
                   TagBox[
                    {GrayLevel[0.2], AbsoluteThickness[1.], Opacity[0.5], 
                    AbsoluteDashing[{2, 4}], LineBox[CompressedData["
1:eJxFxX0w03EcAODZUGxm87IRw344dxNF2Xlpo+jlyhTW5tBoSFJUas5LIaFo
3NmlHyauydUl7qoLUfJyaXq57uI0ip2XLuVWeTsvcdUfPt8/nnvY0tSwBCKB
QBD88387Dfe+LrqAv3EvvUT4CI/z31jU+bCqCE+D7RmdvPN4Pny1a39ZIq6A
uUyKtxRXwaZ7Um7E4I/hbHEtV4L3wMEKOVWcPAC79NbECkSjsNqAMfls0yRM
Jh7QvBFMw3PYxFqPjw7eUTp/Ttn3Gy6niU9NJMzDQc4pK6yhRXhXg+8PxqVl
uKitPY20uArLwpR52dJ1eNDVekmTRwjYuDKdn/WzXQ/OzXjhHk8jwT58nVOt
RB+2DV76Gl5hAGO0Y5rEb4ZwKEt5a8FxM6zSehWOZxjBfSdyWm6qjWFLrupJ
N5ECF7azx0NEJjC7OHNEqKDCpTb5THa/KVzmMbe7QU6DZ5bpo0scOhzJkphl
DaI9MOJJbbYZXHNIoSJam8M2H0LThd1ot4y17XGxFvA9kh7l6Craa9ojR6ay
hMVzhz8JAxhwcUS1WvodHTb+sc7tOhPOF8RXjjhZwa/MMU7bO/Tt9bd14cnW
cFHQ3WYWYwusSR4c63+Oftkyu7Az0gZulfDq35Ns4b2ci97Od9B+Q/o6CY8F
B451+b2eQmvJp1N1V+zgfSYix8YC9ANqwFDSNbSMbuE/JUeTmR3Uzziai1Ga
1E1ouXfjTP0wetanok76BR3hlyt00KIxvrCjegrdGvinpPwXejIk2DXX0B4+
eIQ7xjNCN4c6KFbJ6Ezh/IqMjjaNVPafsUVfiCq87GqPHo4+6znNRtfHBFXF
u6CNj7uHYBx0qtSKqN2KHogjPq3ZhvZNmEmK8kT/BZqcAA8=
                    "]]},
                    Annotation[#, "Charting`Private`Tag$176020#1"]& ]}, {}}},
                Axes->{False, False},
                AxesLabel->{None, None},
                AxesOrigin->{0, 0},
                DisplayFunction->Identity,
                Frame->{{True, False}, {True, False}},
                FrameLabel->{{
                   FormBox["\"actual value\"", TraditionalForm], None}, {
                   FormBox["\"predicted value\"", TraditionalForm], None}},
                FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
                GridLines->{Automatic, Automatic},
                GridLinesStyle->Directive[
                  GrayLevel[0.5, 0.5], 
                  AbsoluteThickness[1], 
                  AbsoluteDashing[{1, 2}]],
                ImageSize->250,
                
                Method->{
                 "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True,
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}},
                PlotRange->{{0, 7.799176999999999}, {0, 7.799176999999999}},
                PlotRangeClipping->True,
                PlotRangePadding->{{0, 0}, {0, 0}},
                Ticks->{Automatic, Automatic}],
               Alignment->Center,
               StripOnInput->False], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            ColumnsEqual->False,
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[1.1199999999999999`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}}],
           "Grid"],
          FrameMargins->{{10, 10}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Alignment->Center,
        BaseStyle->{
         FontWeight -> "Light", FontSize -> 11, FontFamily -> "Segoe UI", 
          NumberMarks -> False, Deployed -> False},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[0.8], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Background->GrayLevel[1],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 CellChangeTimes->{
  3.8207492817295475`*^9, 3.820749312227522*^9, {3.8207494821456895`*^9, 
   3.820749508752392*^9}, {3.820749906806616*^9, 3.820749932800001*^9}},
 CellLabel->
  "Out[168]=",ExpressionUUID->"1d94a224-939e-47d2-9932-45454d4b073b"],

Cell[BoxData[
 RowBox[{"{", 
  GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJzt0/tLk1Ecx/GHWivmbW5Obc3myLYgFZlEicr5RkaFCtlFU7pMbdIFnIWh
qLNNLX9IyKIwTZdQMAlXiVpeoDNH5jSXTaOpqYyMeatQ8lKhlsG++yfqAw+H
NzznpxdHkqY6olzHMIxi7ft7Zlrj07tNPmDUbtoZyhmki9Xa2SaDAIxlYqtt
qI9+yZ5djZrzBW5sYJpeOkoN0RNjSxYBaCqf1WkbrMRn0VIwNSsAu/i+XX63
mwqL8s4oK7cAOMx682o/HfUY6+9IXQ8/7NWMgvWOZAogjR3GBmNkxKij2ER0
y0nDhZMsCAsuX5FGddFTGau6r1kbgcnlzZTuKyXJ7g9l4RYOcHtLQ8ThA1Rn
Uxpil91AM11lv3XOTIPipuQzIj7UKr1kN05/oglnLyqmT/KB2bo3mtXYQD+k
pC4l9flBlvhFYrztI4lprzqxy+EPLfOSm3uyP5O6RyvP03kiOFxT3t52aYRE
LRQu8FUBoOnxDS1qNpAn17e9vxfOB6g9rnHPayEHX8vk5kE+aDb3HW1Wd5Jv
fpM80W8hGOMm9A0hbwmnSO15e8kNFK31NcXuTWREbansDPAE7oZcKeflG7pd
a43g/+JAeUmeRJ0zSHK60iUdqR4QOLLb89q4iVwoK1A9PsQFLjvf92p0J61g
TQ08veINWRX5x+plw8TRK2QHf/cGJuiBV6SwmKRU7R86UDhHjCyxfP68nvr7
x/B2SBeIhl62J/cYyKLJ1q3SeYOmsXW8RvSKBt/5OdSSsXa/OTGhhNtG0Z9x
Dv2x0R8b/bHRHxv9sdEfG/2x0R/b5e8c+rv+d/pjoz+2y9859MdGf2z0x0Z/
bPTHRn9s9MdGf2z0x0Z/bPTHRn9s9Md2+TuH/tjoj43+2C5/5/6//3/7/f8B
FhRWXA==
     "], {{{}, {}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
        LineBox[{33, 1}], LineBox[{34, 2}], LineBox[{35, 3}], 
        LineBox[{37, 5}], LineBox[{38, 6}], LineBox[{41, 9}], 
        LineBox[{43, 11}], LineBox[{44, 12}], LineBox[{45, 13}], 
        LineBox[{46, 14}], LineBox[{55, 23}], LineBox[{58, 26}], 
        LineBox[{61, 29}], LineBox[{63, 31}], LineBox[{64, 32}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
        LineBox[{36, 4}], LineBox[{39, 7}], LineBox[{40, 8}], 
        LineBox[{42, 10}], LineBox[{47, 15}], LineBox[{48, 16}], 
        LineBox[{49, 17}], LineBox[{50, 18}], LineBox[{51, 19}], 
        LineBox[{52, 20}], LineBox[{53, 21}], LineBox[{54, 22}], 
        LineBox[{56, 24}], LineBox[{57, 25}], LineBox[{59, 27}], 
        LineBox[{60, 28}], LineBox[{62, 30}]}}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[{65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 
        80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 
        96}]}}], {{}, {}}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, False},
   AxesLabel->{None, None},
   AxesOrigin->{0.9628063986961669, 0.},
   DisplayFunction->Identity,
   Frame->{{True, False}, {True, False}},
   FrameLabel->{{
      FormBox["\"actual value - predicted value\"", TraditionalForm], None}, {
      FormBox["\"predicted value\"", TraditionalForm], None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotRange->{{0.9628063986961669, 
    7.3584745749224645`}, {-0.6711464820229865, 0.6711464820229865}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}], "}"}]], "Output",
 CellChangeTimes->{
  3.8207492817295475`*^9, 3.820749312227522*^9, {3.8207494821456895`*^9, 
   3.820749508752392*^9}, {3.820749906806616*^9, 3.820749932923995*^9}},
 CellLabel->
  "Out[169]=",ExpressionUUID->"752cb24f-3602-4538-83df-6a8c01a1e682"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"save", " ", "model"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DumpSave", "[", 
     RowBox[{"\"\<trained_fish_price_predict.mx\>\"", ",", "myPredict"}], 
     "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8207501321316485`*^9, 
  3.820750217040702*^9}},ExpressionUUID->"d3aac202-b2b8-4c2c-b76b-\
167a87feb28b"]
},
WindowSize->{1360, 695},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"d62d0bd9-e280-41a3-8684-f347750e4d20"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1179, 31, 105, "Input",ExpressionUUID->"80ce72f3-0ed1-4349-b9a4-0a4c031e2668"],
Cell[1740, 53, 165, 3, 28, "Input",ExpressionUUID->"0162896d-f5c1-46e2-aae2-e38856a2b52f"],
Cell[1908, 58, 530, 17, 28, "Input",ExpressionUUID->"95bbd891-60d6-4bd0-9c0f-3d8081e4870d"],
Cell[2441, 77, 177, 3, 28, "Input",ExpressionUUID->"660645b8-6f36-4f70-bcf6-734eb88a0e94"],
Cell[2621, 82, 347, 8, 28, "Input",ExpressionUUID->"4c9c3158-1472-467e-843d-a932e63f5ae0"],
Cell[2971, 92, 675, 19, 67, "Input",ExpressionUUID->"37bb7d3b-32c8-45b6-9537-3932a7d341cc"],
Cell[3649, 113, 170, 3, 48, "Input",ExpressionUUID->"48ddda7b-67d9-4a5b-83d9-65306a808492"],
Cell[3822, 118, 209, 5, 28, "Input",ExpressionUUID->"ef0977ab-ab25-4a9b-aebf-6590e45df3b3"],
Cell[CellGroupData[{
Cell[4056, 127, 184, 4, 28, "Input",ExpressionUUID->"ee8b21a4-b922-442e-9ef7-58e173aa6005"],
Cell[4243, 133, 58104, 1101, 62, "Output",ExpressionUUID->"0ff6d7fc-68cd-4d61-8324-c8302d7c071b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62384, 1239, 699, 16, 86, "Input",ExpressionUUID->"53fdd2ff-7bbd-4545-bd48-a4b20623d0e0"],
Cell[63086, 1257, 25088, 547, 517, "Output",ExpressionUUID->"1d94a224-939e-47d2-9932-45454d4b073b"],
Cell[88177, 1806, 3549, 73, 168, "Output",ExpressionUUID->"752cb24f-3602-4538-83df-6a8c01a1e682"]
}, Open  ]],
Cell[91741, 1882, 535, 15, 67, "Input",ExpressionUUID->"d3aac202-b2b8-4c2c-b76b-167a87feb28b"]
}
]
*)

